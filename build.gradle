apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'jacoco'

sonarqube {properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.projectName", "OnlineMarket"
        property "sonar.projectKey", "OnlineMarket"
    }
}


sourceCompatibility = 1.7
targetCompatibility = 1.7
version = '1.0'

repositories {
    mavenCentral()
    maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }
}


dependencies {

    testCompile "org.mockito:mockito-core:1.9.5"
    testCompile "org.springframework:spring-test:3.2.3.RELEASE"
    testCompile "com.fasterxml.jackson.core:jackson-core:2.2.1"
    testCompile "com.fasterxml.jackson.core:jackson-databind:2.2.1"

    compile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'org.springframework', name: 'spring-test', version: '4.2.6.RELEASE'
    compile 'org.hibernate:hibernate-core:5.1.0.Final'
    compile 'org.springframework:spring-webmvc'
    compile 'org.hibernate:hibernate-entitymanager:5.1.0.Final'
    compile 'javax.servlet:jstl:1.2'
    compile 'com.h2database:h2:1.4.192'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '1.3.5.RELEASE'
    compile "org.apache.tomcat.embed:tomcat-embed-jasper"
    compile "org.liquibase:liquibase-core:3.4.2"
    compile group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.1.1'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.6.2'
}

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath('org.liquibase:liquibase-gradle-plugin:1.1.1')
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE")
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.0.1"
        classpath "gradle.plugin.com.palantir:jacoco-coverage:0.4.0"


    }
}

task stage(type: Copy, dependsOn: [clean, build]) {
    from jar.archivePath
    into project.rootDir
    rename {
        'app.jar'
    }
}
stage.mustRunAfter(clean)

clean << {
    project.file('app.jar').delete()
}

apply plugin: 'org.liquibase.gradle'
apply plugin: 'spring-boot'
apply plugin: "org.sonarqube"
apply plugin: "com.palantir.jacoco-coverage"
